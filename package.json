{
  "name": "markdown-docx",
  "displayName": "Markdown Docx",
  "description": "Markdown docx converter",
  "version": "0.0.5.rc",
  "publisher": "toramameseven",
  "author": {
    "name": "toramame-seven"
  },
  "icon": "images/markdown2docx.png",
  "license": "MIT",
  "engines": {
    "vscode": "^1.74.0"
  },
  "galleryBanner": {
    "color": "#C80000",
    "theme": "dark"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "markdown",
    "docx",
    "windows"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/toramameseven/markdown-docx.git"
  },
  "activationEvents": [
    "workspaceContains:**/*.md"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "snippets": [
      {
        "language": "markdown",
        "path": "./snippets/snippets.json"
      }
    ],
    "commands": [
      {
        "enablement": "true",
        "command": "main.createDocxTemplate",
        "title": "Create a docx template."
      },
      {
        "enablement": "true",
        "command": "explorer.ExportDocx",
        "title": "Convert to Docx"
      },
      {
        "enablement": "true",
        "command": "explorer.ExportHtmlMarkdown",
        "title": "Convert html to md"
      },
      {
        "enablement": "markdown-docx.isExperimentFeature",
        "command": "explorer.mdToEd",
        "title": "Convert me to ed"
      },
      {
        "enablement": "markdown-docx.isExperimentFeature",
        "command": "explorer.mdToTextile",
        "title": "Convert me to textile"
      },
      {
        "enablement": "true",
        "command": "explorer.mdToPptx",
        "title": "Convert to Pptx"
      },
      {
        "enablement": "markdown-docx.isExperimentFeature",
        "command": "explorer.mdToHtml",
        "title": "Convert me to Html"
      },
      {
        "enablement": "true",
        "command": "editor.ExportDocx",
        "title": "Convert to Docx"
      },
      {
        "enablement": "true",
        "command": "editor.ExportPptx",
        "title": "Convert to Pptx"
      },
      {
        "enablement": "markdown-docx.isExperimentFeature",
        "command": "editor.ExportHtmlDocx",
        "title": "Convert html to md"
      },
      {
        "enablement": "markdown-docx.isExperimentFeature",
        "command": "explorer.textileToMarkdown",
        "title": "Convert textile to md"
      },
      {
        "enablement": "true",
        "command": "editor.ExportStop",
        "title": "stop signal"
      },
      {
        "enablement": "markdown-docx.isExperimentFeature",
        "command": "explorer.htmlToInlineHtml",
        "title": "Convert html to inlineHtml"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceExtname =~ /\\.wd$|\\.md$/i && !markdown-docx.isRunning && markdown-docx.isMainFeature",
          "command": "explorer.ExportDocx",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.wd$|\\.md$/i && !markdown-docx.isRunning && markdown-docx.enablePpt",
          "command": "explorer.mdToPptx",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.html$/i && !markdown-docx.isRunning && markdown-docx.isExperimentFeature",
          "command": "explorer.ExportHtmlMarkdown",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.md$/i && !markdown-docx.isRunning && markdown-docx.isExperimentFeature",
          "command": "explorer.mdToEd",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.md$/i && !markdown-docx.isRunning && markdown-docx.isExperimentFeature",
          "command": "explorer.mdToTextile",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.md$/i && !markdown-docx.isRunning && markdown-docx.isExperimentFeature",
          "command": "explorer.mdToHtml",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.md$/i && !markdown-docx.isRunning && markdown-docx.isExperimentFeature",
          "command": "explorer.htmlToInlineHtml",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.textile$/i && !markdown-docx.isRunning && markdown-docx.isExperimentFeature",
          "command": "explorer.textileToMarkdown",
          "group": "myGroup@1"
        }
      ],
      "editor/context": [
        {
          "when": "resourceExtname =~ /\\.wd$|\\.md$/i && !markdown-docx.isRunning && markdown-docx.isMainFeature",
          "command": "editor.ExportDocx",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.wd$|\\.md$/i && !markdown-docx.isRunning && markdown-docx.enablePpt",
          "command": "editor.ExportPptx",
          "group": "myGroup@1"
        },
        {
          "when": "resourceExtname =~ /\\.html$/i && !markdown-docx.isRunning && markdown-docx.isExperimentFeature",
          "command": "editor.ExportHtmlDocx",
          "group": "myGroup@1"
        },
        {
          "when": "(resourceExtname =~ /\\.html$/i || resourceExtname =~ /\\.md$/i) && markdown-docx.isRunning",
          "command": "editor.ExportStop",
          "group": "myGroup@1"
        }
      ]
    },
    "configuration": {
      "title": "markdown-docx",
      "properties": {
        "markdown-docx.path.docxTemplate": {
          "type": "string",
          "default": "",
          "description": "docx template. if you use your own, set full path.",
          "order": 2
        },
        "markdown-docx.docxEngine.mathExtension": {
          "type": "boolean",
          "default": false,
          "description": "math extension. experimental feature.",
          "order": 3
        },
        "markdown-docx.docxEngine.debug": {
          "type": "boolean",
          "default": false,
          "description": "some debug feature.",
          "order": 5
        },
        "markdown-docx.docxEngine.showOutputTab": {
          "type": "boolean",
          "default": false,
          "description": "show output tab.",
          "order": 6
        },
        "markdown-docx.docxEngine.isOverWrite": {
          "type": "boolean",
          "default": false,
          "description": "If true, overwrite a docx file.",
          "order": 8
        },
        "markdown-docx.docxEngine.wordExePath": {
          "type": "string",
          "default": "",
          "description": "word exe path.",
          "order": 9
        },
        "markdown-docx.docxEngine.isOpenWord": {
          "type": "boolean",
          "default": false,
          "description": "If true, open the word file.",
          "order": 10
        },
        "markdown-docx.docxEngine.enablePpt": {
          "type": "boolean",
          "default": false,
          "description": "If true, enable creating ppt.",
          "order": 11
        },
        "markdown-docx.docxEngine.pptExePath": {
          "type": "string",
          "default": "",
          "description": "ppt exe path.",
          "order": 12
        },
        "markdown-docx.docxEngine.isOpenPpt": {
          "type": "boolean",
          "default": false,
          "description": "If true, open the ppt file.",
          "order": 13
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "copy-wasm": "cpx ./node_modules/svg2png-wasm/svg2png_wasm_bg.wasm ./wasm",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "prepackage": "npm run pretest",
    "package": "vsce package --target win32-x64",
    "clean": "rimraf out",
    "preesbuild-base": "npm run clean && npm run copy-wasm",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --main-fields=module,main --external:vscode --format=cjs --platform=node",
    "esbuild-basex": "node buildme.js",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-only": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node -- --sourcemap",
    "test-compile": "tsc -p ./",
    "installEx": "npm run package && code --install-extension markdown-docx-win32-x64-0.0.4.vsix",
    "testm": "set TS_NODE_COMPILER_OPTIONS={\"module\":\"commonjs\"} && mocha -r ts-node/register src/test-node/**/*.ts",
    "test-common": "set TS_NODE_COMPILER_OPTIONS={\"module\":\"commonjs\"} && mocha -r ts-node/register src/test-node/common.test.ts",
    "license": "npx license-report --config=./license-report-config.json > usedModules.md",
    "prepare": "husky"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.6.1",
    "@commitlint/config-conventional": "^19.6.0",
    "@types/encoding-japanese": "^2.0.1",
    "@types/glob": "^8.0.0",
    "@types/lodash": "^4.14.191",
    "@types/marked": "^4.0.8",
    "@types/mocha": "^10.0.0",
    "@types/node": "^18.11.5",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.42.0",
    "@typescript-eslint/parser": "^5.42.0",
    "@vscode/test-electron": "^2.2.0",
    "cpx": "^1.5.0",
    "esbuild": "^0.16.13",
    "eslint": "^8.26.0",
    "glob": "^8.0.3",
    "husky": "^9.1.7",
    "license-report": "^6.4.0",
    "mocha": "^10.1.0",
    "rimraf": "^3.0.2",
    "ts-node": "^10.9.1",
    "typescript": "^4.8.4"
  },
  "dependencies": {
    "docx": "^8.2.0",
    "encoding-japanese": "^2.0.0",
    "front-matter": "^4.0.2",
    "iconv-lite": "^0.6.3",
    "image-size": "^1.0.2",
    "inline-source": "^8.0.2",
    "jsonc-parser": "^3.2.0",
    "lodash": "^4.17.21",
    "marked": "^4.2.4",
    "node-html-parser": "^6.1.4",
    "pptxgenjs": "^3.12.0",
    "svg2png-wasm": "^1.4.0",
    "tex-to-svg": "^0.2.0",
    "textile-js": "^2.1.1"
  }
}
